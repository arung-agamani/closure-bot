generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model discord_guild {
  guild_name           String                @db.VarChar(32)
  guild_id             String                @id @db.VarChar(32)
  registrar            String                @db.VarChar(32)
  id                   Int                   @default(autoincrement())
  discord_guild_prefix discord_guild_prefix?
}

model discord_guild_channels {
  id                 Int                  @unique @default(autoincrement())
  guild_id           String               @db.VarChar(32)
  channel_id         String               @db.VarChar(32)
  registrar          String               @db.VarChar(32)
  discord_guild_tags discord_guild_tags[]

  @@id([guild_id, channel_id])
}

model discord_guild_prefix {
  guild_id      String        @id @db.VarChar(32)
  prefix        String        @db.VarChar(3)
  discord_guild discord_guild @relation(fields: [guild_id], references: [guild_id])
}

model discord_guild_tags {
  id                     Int                    @default(autoincrement())
  guild_channel_id       Int
  tag                    String                 @db.VarChar(32)
  registrar              String                 @db.VarChar(32)
  discord_guild_channels discord_guild_channels @relation(fields: [guild_channel_id], references: [id])

  @@id([guild_channel_id, tag])
}

model playlist {
  id            Int             @id @default(autoincrement())
  userId        String          @db.VarChar
  name          String          @db.VarChar
  playlist_item playlist_item[]
}

model playlist_item {
  id         Int       @id @default(autoincrement())
  order      Int
  link       String    @db.VarChar
  playlistId Int?
  playlist   playlist? @relation(fields: [playlistId], references: [id])
}

model reminder {
  id         Int    @id @default(autoincrement())
  userId     String @db.VarChar
  cronTime   String @db.VarChar
  content    String @db.VarChar
  uniqueHash String @db.VarChar
}

model user {
  id            Int            @id
  name          String         @db.VarChar
  description   String
  user_metadata user_metadata?
}

model user_metadata {
  id         Int      @id @default(autoincrement())
  alamat     String   @db.VarChar
  dateJoined DateTime @db.Timestamp(6)
  userId     Int?     @unique
  user       user?    @relation(fields: [userId], references: [id])
}

model ak_operator {
  id         Int                      @default(autoincrement())
  name       String                   @db.VarChar(48)
  desc       String?
  tags       String[]                 @db.VarChar(16)
  in_recruit Boolean
  faction    String?                  @db.VarChar(32)
  rarity     Int
  profession String                   @db.VarChar(16)
  position   String                   @db.VarChar(16)
  char_id    String                   @id @db.VarChar(32)
  skills     ak_operator_char_skill[]
  charwords  ak_operator_charword[]
  handbook   ak_operator_handbook?
}

model ak_operator_charword {
  id              Int         @default(autoincrement())
  charWordId      String      @id @db.VarChar(40)
  charId          String      @db.VarChar(32)
  voiceId         String      @db.VarChar(8)
  voiceText       String
  voiceTitle      String      @db.VarChar(32)
  voiceIndex      Int
  voiceType       String      @db.VarChar(16)
  unlockType      String      @db.VarChar(16)
  lockDescription String?     @db.VarChar(32)
  placeType       String      @db.VarChar(32)
  voiceAsset      String      @db.VarChar(32)
  wordKey         String      @db.VarChar(32)
  ak_operator     ak_operator @relation(fields: [charId], references: [char_id])
}

model ak_operator_handbook {
  id             Int                          @default(autoincrement())
  charId         String                       @id @db.VarChar(32)
  infoName       String                       @db.VarChar(32)
  drawName       String                       @db.VarChar(32)
  ak_operator    ak_operator                  @relation(fields: [charId], references: [char_id])
  handbook_story ak_operator_handbook_story[]
}

model ak_operator_handbook_story {
  id           Int                  @default(autoincrement())
  charId       String               @db.VarChar(32)
  storyTitle   String               @db.VarChar(32)
  storyText    String
  unLockorNot  Boolean
  unLockType   Int
  unLockParam  String
  unLockString String
  handbook     ak_operator_handbook @relation(fields: [charId], references: [charId])

  @@id([charId, storyTitle])
}

model ak_operator_skill {
  id           Int                       @default(autoincrement())
  skillId      String                    @id @db.VarChar(32)
  iconId       String?                   @db.VarChar(32)
  hidden       Boolean
  levels       Json?                     @db.Json
  char_skills  ak_operator_char_skill[]
  skill_levels ak_operator_skill_level[]
}

model ak_operator_skill_level {
  id            Int                                  @default(autoincrement())
  name          String
  rangeId       String?
  description   String
  skillType     Int
  spType        Int
  maxChargeTime Int
  spCost        Int
  initSp        Int
  increment     Decimal                              @db.Decimal
  prefabId      String?
  duration      Decimal                              @db.Decimal
  skillId       String                               @db.VarChar(32)
  skill         ak_operator_skill                    @relation(fields: [skillId], references: [skillId])
  blackboards   ak_operator_skill_level_blackboard[]

  @@id([initSp, spCost, name])
}

model ak_operator_skill_level_blackboard {
  id          Int                     @default(autoincrement())
  name        String
  spCost      Int
  initSp      Int
  key         String
  value       Decimal                 @db.Decimal
  skill_level ak_operator_skill_level @relation(fields: [name, spCost, initSp], references: [name, spCost, initSp])

  @@id([value, key, initSp, spCost, name])
}

model ak_operator_char_skill {
  id                Int               @default(autoincrement())
  skillId           String            @db.VarChar(32)
  charId            String            @db.VarChar(32)
  overridePrefabKey String?
  overrideTokenKey  String?
  levelUpCostCond   Json[]            @db.Json
  unlockCond        Json?             @db.Json
  ak_operator       ak_operator       @relation(fields: [charId], references: [char_id])
  skill             ak_operator_skill @relation(fields: [skillId], references: [skillId])

  @@id([skillId, charId])
}
